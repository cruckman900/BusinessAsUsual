@page "/login"
@using BusinessAsUsual.Web.Services

@inject NavigationManager Nav
@inject CompanySession Session

<MudPaper Elevation="4" Class="p-6 mx-auto" MaxWidth="MaxWidth.Small">
    <MudText Typo="Typo.h4" Color="Color.Primary" GutterBottom="true">Login</MudText>

    <MudTextField @bind-Value="DatabaseName"
                  Label="Company DB Name"
                  Placeholder="Enter company DB name"
                  Variant="Variant.Outlined"
                  Margin="Margin.Normal"
                  Immediate="true"
                  Required="true"
                  For="@(() => DatabaseName)" />

    @if (ShowValidationMessage)
    {
        <MudText Color="Color.Error" Typo="Typo.caption">
            Please enter a database name.
        </MudText>
    }

    <MudButton Variant="Variant.Filled"
               Color="Color.Primary"
               Class="mt-3"
               OnClick="HandleLogin">
        Login
    </MudButton>
</MudPaper>

@code {
    // S2933: Make 'DatabaseName' 'readonly'.
    // This cannot be made readonly because it is mutated by @bind.
    // To resolve the diagnostic, suppress the warning for this field.
#pragma warning disable S2933 // Field should be readonly
    private string? DatabaseName = string.Empty; // Cannot be readonly because it is mutated by @bind
#pragma warning restore S2933

    private bool ShowValidationMessage = false;

    private async Task HandleLogin()
    {
        try
        {
            await Task.CompletedTask; // ✅ satisfies async requirement
            System.Diagnostics.Debug.WriteLine("in handle login");

            if (!string.IsNullOrWhiteSpace(DatabaseName))
            {
                ShowValidationMessage = false;
                System.Diagnostics.Debug.WriteLine($"🔐 Logging in with DB: {DatabaseName}");
                Session.SetDatabase(DatabaseName);
                Nav.NavigateTo("/", true);
            }
            else
            {
                ShowValidationMessage = true;
                System.Diagnostics.Debug.WriteLine("⚠️ No DB name entered.");
            }
        }
        catch (Exception ex)
        {
            System.Diagnostics.Debug.WriteLine($"❌ Error in Login HandleClick: {ex.Message}");
        }
    }
}