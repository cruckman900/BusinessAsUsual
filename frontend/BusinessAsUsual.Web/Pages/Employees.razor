@page "/employees"

@using BusinessAsUsual.Web.Components
@using BusinessAsUsual.Web.Data.Entities
@using BusinessAsUsual.Web.Services
@using Microsoft.AspNetCore.Authorization

@inject EmployeeService EmployeeService
@attribute [Authorize(Roles = "Admin")]

<MudPaper Class="p-6">
    <MudText Typo="Typo.h4" Color="Color.Primary" GutterBottom="true">Employees</MudText>

    <SimpleModal IsVisible="@showForm" OnClose="CloseForm">
        <EmployeeForm Employee="@selectedEmployee"
                      OnSaved="ReloadEmployees"
                      OnClose="CloseForm" />
    </SimpleModal>

    <MudButton Variant="Variant.Filled"
               Color="Color.Primary"
               StartIcon="@Icons.Material.Filled.PersonAdd"
               OnClick="ShowAddModal"
               Class="mb-4">
        Add Employee
    </MudButton>

    <MudTable Items="EmployeeList"
              Hover="true"
              Bordered="true"
              Striped="true"
              Elevation="1"
              Dense="true">
        <HeaderContent>
            <MudTh>First Name</MudTh>
            <MudTh>Last Name</MudTh>
            <MudTh>Middle Name</MudTh>
            <MudTh>Prefix</MudTh>
            <MudTh>Suffix</MudTh>
            <MudTh>Email</MudTh>
            <MudTh>Role</MudTh>
            <MudTh>Status</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="First Name">@context.FirstName</MudTd>
            <MudTd DataLabel="Last Name">@context.LastName</MudTd>
            <MudTd DataLabel="Middle Name">@context.MiddleName</MudTd>
            <MudTd DataLabel="Prefix">@context.Prefix</MudTd>
            <MudTd DataLabel="Suffix">@context.Suffix</MudTd>
            <MudTd DataLabel="Email">@context.Email</MudTd>
            <MudTd DataLabel="Role">@context.Role</MudTd>
            <MudTd DataLabel="Status">
                <MudChip Color="@((context.IsActive ? Color.Success : Color.Error))" Variant="Variant.Filled">
                    @(context.IsActive ? "Active" : "Inactive")
                </MudChip>
            </MudTd>
            <MudTd>
                <MudIconButton Icon="@Icons.Material.Filled.Edit"
                               Color="Color.Secondary"
                               Size="Size.Small"
                               OnClick="@(() => EditEmployee(context))" />
                <MudIconButton Icon="@Icons.Material.Filled.Sync"
                               Color="Color.Warning"
                               Size="Size.Small"
                               OnClick="@(() => ToggleStatus(context.Id))" />
            </MudTd>
        </RowTemplate>
    </MudTable>
</MudPaper>

@code {
    private List<Employee> EmployeeList = new();

    protected override async Task OnInitializedAsync()
    {
        await ReloadEmployees();
    }

    private async Task ReloadEmployees()
    {
        var companyId = Guid.Parse("85FBC8A5-DCF4-4761-8188-776C373197EF"); // Replace with actual company ID retrieval logic
        EmployeeList = await EmployeeService.GetAllEmployeesAsync(companyId);
    }

    private void ShowAddModal()
    {
        selectedEmployee = new Employee();
        showForm = true;
    }

    private void EditEmployee(Employee employee)
    {
        selectedEmployee = employee;
        showForm = true;
    }

    private async Task ToggleStatus(Guid employeeId)
    {
        await EmployeeService.ToggleStatusAsync(employeeId);
        await ReloadEmployees();
    }

    private bool showForm;
    private Employee selectedEmployee = new();

    private void OpenForm() => showForm = true;
    private void CloseForm() => showForm = false;
}
