services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
      - admin

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DB_CONNECTION_STRING=${DB_CONNECTION_STRING}
    depends_on:
      - db

  admin:
    build:
      context: .
      dockerfile: BusinessAsUsual.Admin/Dockerfile
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - AWS_SQL_CONNECTION_STRING=${AWS_SQL_CONNECTION_STRING}
    volumes:
      - ./.env:/app/.env
    depends_on:
      - db

  tests:
    build:
      context: .
      dockerfile: BusinessAsUsual.Tests/Dockerfile
    depends_on:
      - backend
      - admin
      - db
    environment:
      - AWS_SQL_CONNECTION_STRING=${AWS_SQL_CONNECTION_STRING}
    env_file:
      - ./BusinessAsUsual/.env
    volumes:
      - ./BusinessAsUsual/.env:/BusinessAsUsual/.env
    command: ["dotnet", "test", "/app/BusinessAsUsual.Tests/BusinessAsUsual.Tests.csproj", "--no-build", "--verbosity", "normal"]

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    env_file:
      - .env
    ports:
      - "1433:1433"